close to clean arch

Solution: MessengerApp
│
├── MessengerAPI (ASP.NET Core API)
│   └── Controllers, SignalR Hub, Dependency Injection
│
├── MessengerBusiness (Class Library)
│   └── Encryption/Decryption Logic, Business Logic
│
└── MessengerData (Class Library)
    └── Database Access, Repositories, EF Core Models

slice arch
Solution: MessengerApp
│
├── MessengerAPI (ASP.NET Core API)
│   └── Controllers, SignalR Hub, Dependency Injection
│
├── Ciphers (Class Library)
│   ├── CezarCipher
│   │   └── CezarCipherService.cs
│   ├── PolibiusCipher
│   │   └── PolibiusCipherService.cs
│   ├── Cipher3 (e.g., Vigenère Cipher)
│   │   └── VigenereCipherService.cs
│   ├── Cipher4 (e.g., AES)
│   │   └── AesCipherService.cs
│   ├── Cipher5 (e.g., RSA)
│   │   └── RsaCipherService.cs
│   └── Cipher6 (e.g., DES)
│       └── DesCipherService.cs
│
├── MessengerBusiness (Class Library)
│   ├── Interfaces (e.g., ICipherService)
│   └── Business Logic (e.g., Message Handling)
│
└── MessengerData (Class Library)
    ├── Database Access
    └── Repositories

slice with files
Solution: MessengerApp
│
├── MessengerAPI (ASP.NET Core API)
│   ├── Controllers
│   │   ├── MessageController.cs        // Controller for handling messages
│   │   ├── UserController.cs           // Controller for handling user-related operations
│   │   └── CipherController.cs         // (Optional) Controller to handle cipher settings or info
│   │
│   ├── Hubs
│   │   └── ChatHub.cs                  // SignalR hub for real-time communication
│   │
│   ├── DTOs
│   │   ├── MessageDto.cs               // Data Transfer Object for messages
│   │   └── UserDto.cs                  // Data Transfer Object for users
│   │
│   ├── Startup.cs                      // Configuration for services and middleware
│   ├── Program.cs                      // Entry point for the application
│   └── appsettings.json                // General app settings
│
├── Ciphers (Class Library)
│   ├── CezarCipher
│   │   ├── CezarCipherService.cs       // Implementation of the Cezar cipher
│   │   ├── CezarCipherSettings.cs       // (Optional) Settings specific to the Cezar cipher
│   │   └── CezarCipherTests.cs         // Unit tests for Cezar cipher
│   │
│   ├── PolibiusCipher
│   │   ├── PolibiusCipherService.cs    // Implementation of the Polibius cipher
│   │   ├── PolibiusCipherSettings.cs    // (Optional) Settings specific to the Polibius cipher
│   │   └── PolibiusCipherTests.cs      // Unit tests for Polibius cipher
│   │
│   ├── VigenereCipher
│   │   ├── VigenereCipherService.cs    // Implementation of the Vigenère cipher
│   │   ├── VigenereCipherSettings.cs    // (Optional) Settings specific to the Vigenère cipher
│   │   └── VigenereCipherTests.cs      // Unit tests for Vigenère cipher
│   │
│   ├── AesCipher
│   │   ├── AesCipherService.cs          // Implementation of the AES cipher
│   │   ├── AesCipherSettings.cs          // (Optional) Settings specific to the AES cipher
│   │   └── AesCipherTests.cs            // Unit tests for AES cipher
│   │
│   ├── RsaCipher
│   │   ├── RsaCipherService.cs          // Implementation of the RSA cipher
│   │   ├── RsaCipherSettings.cs          // (Optional) Settings specific to the RSA cipher
│   │   └── RsaCipherTests.cs            // Unit tests for RSA cipher
│   │
│   └── DesCipher
│       ├── DesCipherService.cs          // Implementation of the DES cipher
│       ├── DesCipherSettings.cs          // (Optional) Settings specific to the DES cipher
│       └── DesCipherTests.cs            // Unit tests for DES cipher
│
├── MessengerBusiness (Class Library)
│   ├── Interfaces
│   │   └── ICipherService.cs             // Interface for cipher services
│   │
│   ├── Services
│   │   ├── MessageService.cs             // Business logic for handling messages
│   │   └── UserService.cs                // Business logic for handling users
│   │
│   └── BusinessLogicTests.cs             // Unit tests for business logic
│
└── MessengerData (Class Library)
    ├── Entities
    │   ├── Message.cs                    // Entity model for messages
    │   └── User.cs                       // Entity model for users
    │
    ├── Repositories
    │   ├── IMessageRepository.cs         // Repository interface for messages
    │   └── IUserRepository.cs            // Repository interface for users
    │
    ├── DataContext.cs                    // DbContext for Entity Framework
    └── DataAccessTests.cs                // Unit tests for data access
with:
MessengerAPI (ASP.NET Core API):

References:
MessengerBusiness
Ciphers
MessengerData
Ciphers (Class Library):

References:
MessengerBusiness
MessengerBusiness (Class Library):

References:
MessengerData
Ciphers
MessengerData (Class Library):

References:
MessengerBusiness (optional)



tests:
Solution: MessengerApp
│
├── MessengerApp.Tests (Test Project)
│   ├── MessengerAPI.Tests
│   │   ├── Controllers
│   │   │   ├── MessageControllerTests.cs      // Tests for MessageController
│   │   │   └── UserControllerTests.cs         // Tests for UserController
│   │   └── Hubs
│   │       └── ChatHubTests.cs                // Tests for ChatHub
│   │
│   ├── Ciphers.Tests
│   │   ├── CezarCipherTests.cs                 // Tests for Cezar cipher
│   │   ├── PolibiusCipherTests.cs              // Tests for Polibius cipher
│   │   ├── VigenereCipherTests.cs              // Tests for Vigenère cipher
│   │   ├── AesCipherTests.cs                   // Tests for AES cipher
│   │   ├── RsaCipherTests.cs                   // Tests for RSA cipher
│   │   └── DesCipherTests.cs                   // Tests for DES cipher
│   │
│   ├── MessengerBusiness.Tests
│   │   ├── Services
│   │   │   ├── MessageServiceTests.cs          // Tests for MessageService
│   │   │   └── UserServiceTests.cs             // Tests for UserService
│   │   └── Interfaces
│   │       └── ICipherServiceTests.cs          // Tests for cipher service interfaces
│   │
│   └── MessengerData.Tests
│       ├── Repositories
│       │   ├── MessageRepositoryTests.cs       // Tests for MessageRepository
│       │   └── UserRepositoryTests.cs          // Tests for UserRepository
│       └── DataContextTests.cs                 // Tests for DataContext
